#!/bin/bash

# üîß Script de Diagnostic et Correction Frontend
# R√©sout les probl√®mes de d√©ploiement du frontend

set -e

echo "üîß Diagnostic et Correction Frontend - LinkedIn Prospector"
echo "========================================================="

# Couleurs
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

# Configuration
BACKEND_URL="https://setterai-729q.onrender.com"
FRONTEND_URL="https://linkedin-prospector-frontend.onrender.com"
REPO_URL="https://github.com/pablogoffinet/setterai.git"

echo -e "${BLUE}üîç Diagnostic en cours...${NC}"
echo ""

# Test 1: Backend API
echo -e "${BLUE}1. Test du Backend API...${NC}"
BACKEND_RESPONSE=$(curl -s "$BACKEND_URL/health" || echo "ERROR")
if [[ "$BACKEND_RESPONSE" == "ERROR" ]]; then
    echo -e "${RED}‚ùå Backend non accessible${NC}"
    echo "   URL: $BACKEND_URL"
else
    echo -e "${GREEN}‚úÖ Backend fonctionnel${NC}"
    echo "   Response: $BACKEND_RESPONSE"
fi
echo ""

# Test 2: Frontend
echo -e "${BLUE}2. Test du Frontend...${NC}"
FRONTEND_RESPONSE=$(curl -s "$FRONTEND_URL" || echo "ERROR")
if [[ "$FRONTEND_RESPONSE" == "ERROR" || "$FRONTEND_RESPONSE" == "Not Found" ]]; then
    echo -e "${RED}‚ùå Frontend non d√©ploy√© ou inaccessible${NC}"
    echo "   URL: $FRONTEND_URL"
    echo -e "${YELLOW}üí° Le frontend doit √™tre d√©ploy√© sur Render${NC}"
else
    echo -e "${GREEN}‚úÖ Frontend accessible${NC}"
fi
echo ""

# Test 3: Configuration render.yaml
echo -e "${BLUE}3. V√©rification de la configuration...${NC}"
if [ -f "render.yaml" ]; then
    echo -e "${GREEN}‚úÖ Fichier render.yaml trouv√©${NC}"
    
    # V√©rifier la configuration du frontend
    if grep -q "linkedin-prospector-frontend" render.yaml; then
        echo -e "${GREEN}‚úÖ Configuration frontend pr√©sente${NC}"
    else
        echo -e "${RED}‚ùå Configuration frontend manquante${NC}"
    fi
    
    # V√©rifier l'URL du backend
    if grep -q "$BACKEND_URL" render.yaml; then
        echo -e "${GREEN}‚úÖ URL backend configur√©e${NC}"
    else
        echo -e "${RED}‚ùå URL backend non configur√©e${NC}"
    fi
else
    echo -e "${RED}‚ùå Fichier render.yaml manquant${NC}"
fi
echo ""

# Test 4: Fichiers frontend
echo -e "${BLUE}4. V√©rification des fichiers frontend...${NC}"
if [ -d "frontend" ]; then
    echo -e "${GREEN}‚úÖ Dossier frontend trouv√©${NC}"
    
    if [ -f "frontend/package.json" ]; then
        echo -e "${GREEN}‚úÖ package.json trouv√©${NC}"
    else
        echo -e "${RED}‚ùå package.json manquant${NC}"
    fi
    
    if [ -f "frontend/next.config.ts" ]; then
        echo -e "${GREEN}‚úÖ next.config.ts trouv√©${NC}"
    else
        echo -e "${RED}‚ùå next.config.ts manquant${NC}"
    fi
else
    echo -e "${RED}‚ùå Dossier frontend manquant${NC}"
fi
echo ""

# Diagnostic et solutions
echo -e "${BLUE}üîß Solutions:${NC}"
echo ""

if [[ "$FRONTEND_RESPONSE" == "ERROR" || "$FRONTEND_RESPONSE" == "Not Found" ]]; then
    echo -e "${YELLOW}üöÄ Le frontend n'est pas encore d√©ploy√©.${NC}"
    echo ""
    echo -e "${BLUE}üìã √âtapes pour d√©ployer:${NC}"
    echo "   1. üåê Allez sur https://render.com"
    echo "   2. üìÅ Cliquez sur 'New' ‚Üí 'Blueprint'"
    echo "   3. üîó Connectez: $REPO_URL"
    echo "   4. ‚úÖ Cliquez sur 'Apply'"
    echo "   5. ‚è≥ Attendez 5-10 minutes"
    echo ""
    echo -e "${GREEN}üéØ URLs apr√®s d√©ploiement:${NC}"
    echo "   Backend: $BACKEND_URL"
    echo "   Frontend: $FRONTEND_URL"
    echo ""
    
    # V√©rifier si le repository est √† jour
    echo -e "${BLUE}üì§ V√©rification du repository GitHub...${NC}"
    if git remote -v | grep -q "github.com"; then
        echo -e "${GREEN}‚úÖ Repository GitHub configur√©${NC}"
        echo "   URL: $REPO_URL"
    else
        echo -e "${RED}‚ùå Repository GitHub non configur√©${NC}"
    fi
fi

echo ""
echo -e "${GREEN}‚úÖ Diagnostic termin√© !${NC}"
echo ""
echo -e "${BLUE}üí° Prochaines √©tapes:${NC}"
echo "   1. D√©ployez le frontend sur Render"
echo "   2. Testez l'interface web"
echo "   3. Configurez les variables d'environnement si n√©cessaire"
echo "" 