services:
  # Service principal (Backend API + AI Engine + Queue Service)
  - type: web
    name: linkedin-prospector-api
    env: docker
    plan: starter
    region: oregon
    healthCheckPath: /health
    dockerfilePath: ./Dockerfile.render
    envVars:
      - key: NODE_ENV
        value: production
      - key: PORT
        value: 3000
      - key: DATABASE_URL
        fromDatabase:
          name: linkedin-prospector-db
          property: connectionString
      - key: REDIS_URL
        fromService:
          type: redis
          name: linkedin-prospector-redis
          property: connectionString
      - key: JWT_SECRET
        generateValue: true
      - key: OPENAI_API_KEY
        sync: false
      - key: CLAUDE_API_KEY
        sync: false
      - key: MISTRAL_API_KEY
        sync: false
      - key: UNIPILE_API_KEY
        sync: false
      - key: UNIPILE_API_URL
        value: https://api8.unipile.com:13813/api/v1
      - key: UNIPILE_WEBHOOK_SECRET
        sync: false
      - key: FRONTEND_URL
        value: https://linkedin-prospector-frontend.onrender.com
      - key: AI_ENGINE_URL
        value: http://localhost:3001
      - key: QUEUE_SERVICE_URL
        value: http://localhost:3002



databases:
  # Base de donn√©es PostgreSQL
  - name: linkedin-prospector-db
    databaseName: linkedin_prospector
    user: linkedin_prospector_user
    plan: starter
    region: oregon

  # Redis pour les queues
  - name: linkedin-prospector-redis
    databaseName: linkedin_prospector_redis
    plan: starter
    region: oregon
    maxmemoryPolicy: allkeys-lru 