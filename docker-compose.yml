version: '3.8'

services:
  # Base de donn√©es PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: saas-postgres
    environment:
      POSTGRES_DB: saas_messaging
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - saas-network

  # Redis pour les queues et cache
  redis:
    image: redis:7-alpine
    container_name: saas-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - saas-network

  # Backend API Gateway
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: saas-backend
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://postgres:postgres123@postgres:5432/saas_messaging
      REDIS_URL: redis://redis:6379
      AI_ENGINE_URL: http://ai-engine:3001
      QUEUE_SERVICE_URL: http://queue-service:3002
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      - postgres
      - redis
    networks:
      - saas-network
    develop:
      watch:
        - action: sync
          path: ./backend/src
          target: /app/src
        - action: rebuild
          path: ./backend/package.json

  # Moteur IA
  ai-engine:
    build:
      context: ./ai-engine
      dockerfile: Dockerfile
    container_name: saas-ai-engine
    ports:
      - "3001:3001"
    environment:
      NODE_ENV: development
      REDIS_URL: redis://redis:6379
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      CLAUDE_API_KEY: ${CLAUDE_API_KEY}
      MISTRAL_API_KEY: ${MISTRAL_API_KEY}
    volumes:
      - ./ai-engine:/app
      - /app/node_modules
    depends_on:
      - redis
    networks:
      - saas-network
    develop:
      watch:
        - action: sync
          path: ./ai-engine/src
          target: /app/src

  # Service de queues
  queue-service:
    build:
      context: ./queue-service
      dockerfile: Dockerfile
    container_name: saas-queue-service
    ports:
      - "3002:3002"
    environment:
      NODE_ENV: development
      REDIS_URL: redis://redis:6379
      BACKEND_URL: http://backend:3000
      AI_ENGINE_URL: http://ai-engine:3001
      UNIPILE_API_KEY: ${UNIPILE_API_KEY}
      UNIPILE_API_URL: ${UNIPILE_API_URL}
    volumes:
      - ./queue-service:/app
      - /app/node_modules
    depends_on:
      - redis
    networks:
      - saas-network
    develop:
      watch:
        - action: sync
          path: ./queue-service/src
          target: /app/src

  # Frontend Next.js
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: saas-frontend
    ports:
      - "3003:3000"
    environment:
      NODE_ENV: development
      NEXT_PUBLIC_API_URL: http://localhost:3000
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - saas-network
    develop:
      watch:
        - action: sync
          path: ./frontend/src
          target: /app/src

volumes:
  postgres_data:
  redis_data:

networks:
  saas-network:
    driver: bridge